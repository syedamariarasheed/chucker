apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'

android {
    compileSdkVersion rootProject.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        consumerProguardFiles 'proguard-rules.pro'
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        viewBinding = true
    }

    lintOptions {
        warningsAsErrors true
        abortOnError true
        // We don't want to impose RTL on consuming applications.
        disable 'RtlEnabled'
        // Don't fail build if some dependencies outdated
        disable 'GradleDependency'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                useJUnitPlatform()
            }
        }
    }

    allprojects {
        configurations.all {
            resolutionStrategy {
                force 'org.xerial:sqlite-jdbc:3.34.0'
            }
        }
    }

    resourcePrefix 'chucker_'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    implementation "com.google.android.material:material:$materialComponentsVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.palette:palette-ktx:$paletteKtxVersion"

    implementation "androidx.activity:activity-ktx:$activityVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"

    api platform("com.squareup.okhttp3:okhttp-bom:$okhttpVersion")
    api "com.squareup.okhttp3:okhttp"
    testImplementation "com.squareup.okhttp3:mockwebserver"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "junit:junit:$vintageJunitVersion"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$vintageJunitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "androidx.test:core:$androidxTestCoreVersion"
    testImplementation "androidx.arch.core:core-testing:$androidXCoreVersion"
    testImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
}

//apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
apply from: rootProject.file('gradle/kotlin-static-analysis.gradle')

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = 'com.github.syedamariarasheed.chucker'
                artifactId = 'library'
                version = generateVersionCode.name
            }
        }
    }
}

apply from: 'versioning.gradle'